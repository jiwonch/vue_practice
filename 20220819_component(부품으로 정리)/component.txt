component
간단히 만들 수 있는 SPA도 규모가 커지면 복잡해 지기 마련이다.
그 때 "같은 종류의 처리를 하는 부분을 컴포넌트로 정리" 하면 보기 좋고 이해하기 쉬워진다.

HTML의 일부분을 오브젝트로 정리하는 것에는 template 오브젝트를 사용한다.
그리고 오브젝트에 이름(컴포넌트 태그명)을 붙인 것을 "컴포넌트"라고 한다.

<my-component></my-component> <-- 준비된 컴포넌트가 표시된다.

--------------------------------------------------------------------------------------------
컴포넌트 만드는 방법
1. 글로벌(전역 컴포넌트)로 등록하는 방법

Vue.component('컴포넌트 태그명', {
    template: 'HTML부분'
})

2. 로컬(지역 컴포넌트)에 등록하는 방법

Var 컴포넌트의 오브젝트명 = {
    template: 'HTML부분'
}

new Vue({
    el: '#app',
    components: {
        '컴포넌트태그명': 컴포넌트 오브젝트명
    }
})

-------------------------------------------------------------------------------------------
**컴포넌트 네이밍법
컴포넌트의 오브젝트명은 JavaScript의 클랙스명에 해당되므로 "MyComponent"의 파스칼 표기법으로,
컴포넌트의 태그명은 HTML에서 사용할 이름이므로 "my-component"의 케밥 표기법으로 작성.

-------------------------------------------------------------------------------------------
컴포넌트(component)
- Template을 보완하여 만든 요소다.
- Template은 순수 HTML코드만을 가지고 있지만 Component는 HTML템플릿과 더불어 데이터 셋팅, 함수
정의 등 다양한 작업을 할 수 있다.
- Component는 Vue.js의 핵심 요소이다.
- 재사용이 가능하다
- 여러개의 Component 사용이 가능하다.
- data는 무조건 함수로 정의해야 한다.
- Vue.js에서 제공하는 컴포넌트를 이용해 다양한 템플릿을 만들어 사용할 수 있다.

cf. https://anko3899.tistory.com/229
